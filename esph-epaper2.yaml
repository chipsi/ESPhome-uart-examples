#
# https://github.com/lewisxhe/TTGO-EPaper-Series
# http://www.lilygo.cn/prod_view.aspx?TypeId=50031&Id=1149&FId=t3:50031:3
# https://github.com/Xinyuan-LilyGO/LilyGo-T5-ink-series
# https://github.com/waveshare/e-Paper/tree/master/Arduino
# custom component: https://github.com/matikij/esphome/tree/gxepd2_epaper/esphome/components/gxepd2_epaper
# resolution: 250 x 122 px
#
esphome:
  name: tuerinfo
  platform: ESP32
  board: esp32dev

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 0s

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

time:
  - platform: homeassistant
    id: homeassistant_time

#deep_sleep:
#  run_duration: 60s
#  sleep_duration: 3min

sensor:
  - platform: wifi_signal
    name: "wifi_signal"
    update_interval: 60s

#Homeassistant Binary Sensors
text_sensor:
  - platform: homeassistant
    entity_id: sensor.tuersensor1
    id: tuersensor1
  - platform: homeassistant
    entity_id: sensor.tuersensor2
    id: tuersensor2
  - platform: homeassistant
    entity_id: sensor.tuersensor3
    id: tuersensor3
  - platform: homeassistant
    entity_id: sensor.tuersensor4
    id: tuersensor4

# Configure SPI pins
spi:
  clk_pin: 18
  mosi_pin: 23

# Fonts
font:
#  - file: "/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf"
  - file: "/usr/share/fonts/truetype/msttcorefonts/Arial.ttf"
    id: font4
    glyphs: "*!?%()+,-_.:Â°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyzÃ¤Ã¶Ã¼Ã„Ã–ÃœðŸŒ§áš„"
#    size: 20

  - file: "/usr/share/fonts/truetype/msttcorefonts/arial.ttf"
    id: font2
    size: 10

  - file: "/usr/share/fonts/truetype/noto/NotoSansSymbols2-Regular.ttf"
    id: font3
    glyphs: "â˜‚"

  - file: "/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf"
    id: font1
    glyphs: "*!?%()+,-_.:Â°<>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyzÃ¤Ã¶Ã¼Ã„Ã–ÃœðŸŒ§áš„â˜‚"

#  - file: "/usr/share/fonts/truetype/noto/NotoColorEmoji.ttf"
#    id: font3
#    glyphs: "â˜”â˜‚"

# Configure e-ink display
# custom component: https://github.com/matikij/esphome/tree/gxepd2_epaper/esphome/components/gxepd2_epaper
display:
  - platform: gxepd2_epaper
    model: '213_b73'
    cs_pin: 5
    dc_pin: 17
    busy_pin: 4
    reset_pin: 16
#    full_update_every: 15
    rotation: 90
#    update_interval: 1min
    lambda: |-
      auto time = id(homeassistant_time).now();

      // grosser Rahmen zeichnen
      //it.rectangle(2, 12, it.get_width()-4, it.get_height()-14);

      //Ãœberschrift schreiben
      //it.filled_rectangle(it.get_width()/3, 11, it.get_width()/3, 3, COLOR_OFF);
      //it.rectangle(it.get_width()/3, 10, it.get_width()/3, 20);
      //it.print(it.get_width()/2, 10, id(font1), TextAlign::TOP_CENTER, "Status");

      // Variablen fÃ¼r Positionierung der Texte und Kacheln
      int text_x = 1;
      int text_h = 20+3;
      int offs_y = 15;
      //int offs_x = 7;
      //int rect_x = 0;
      //int rect_h = 2;

      //zeile 1
      if ( id(tuersensor2).state.length() >1 )
           it.print(   text_x, 0*text_h+offs_y, id(font1), id(tuersensor2).state.c_str());
      else it.strftime(text_x, 0*text_h+offs_y, id(font1), "%d.%m.%Y %H:%M", time);

      //zeile 2
      //  it.printf(text_x, 0, id(font1), "sensor value: %s", id(tuersensor1).state);
      it.print(text_x, 1*text_h+offs_y, id(font1), id(tuersensor1).state.c_str());


      //zeile 3
      it.print(text_x, 2*text_h+offs_y, id(font1), id(tuersensor3).state.c_str());

      //zeile 4
      it.print(text_x, 3*text_h+offs_y, id(font1), id(tuersensor4).state.c_str());

      /*
      // Kacheln zeichnen abhÃ¤ngig vom Status
      if (id(fenster_steffi).state) {
        it.print(rect_x+offs_x, 0*text_h+rect_h+offs_y, id(font_materialdesign), "ï–±");
      }
      else {
        it.print(rect_x+offs_x, 0*text_h+rect_h+offs_y, id(font_materialdesign), "ï–®");
      }
      if (id(fenster_thomas).state) {
        it.print(rect_x+offs_x, 1*text_h+rect_h+offs_y, id(font_materialdesign), "ï–±");
      }
      else {
        it.print(rect_x+offs_x, 1*text_h+rect_h+offs_y, id(font_materialdesign), "ï–®");
      }
      if (id(fenster_kueche).state) {
        it.print(rect_x+offs_x, 2*text_h+rect_h+offs_y, id(font_materialdesign), "ï–±");
      }
      else {
        it.print(rect_x+offs_x, 2*text_h+rect_h+offs_y, id(font_materialdesign), "ï–®");
      }
      if (id(fenster_wohnzimmer).state) {
        it.print(rect_x+offs_x, 3*text_h+rect_h+offs_y, id(font_materialdesign), "ï–±");
      }
      else {
        it.print(rect_x+offs_x, 3*text_h+rect_h+offs_y, id(font_materialdesign), "ï–®");
      }
      */